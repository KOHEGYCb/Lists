package lists;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author dmitry
 */
public class Create extends javax.swing.JFrame {

    /**
     * Creates new form Create
     */
    public Create() {
        initComponents(); //инициализация компанентов графического интерфейса
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnList1 = new javax.swing.JRadioButton();
        btnList2 = new javax.swing.JRadioButton();
        btnList3 = new javax.swing.JRadioButton();
        text = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnList1.setText("List 1");
        btnList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnList1MouseClicked(evt);
            }
        });

        btnList2.setText("List 2");
        btnList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnList2MouseClicked(evt);
            }
        });

        btnList3.setText("List 3");
        btnList3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnList3MouseClicked(evt);
            }
        });

        btnCreate.setText("Create");
        btnCreate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCreateMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(text)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnList1)
                            .addComponent(btnList2)
                            .addComponent(btnList3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnCreate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnList1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnList2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnList3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCreate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnList1MouseClicked
        //выделение первого чекбокса, отмена выделения других
        btnList1.setSelected(true);
        btnList2.setSelected(false);
        btnList3.setSelected(false);
    }//GEN-LAST:event_btnList1MouseClicked

    private void btnList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnList2MouseClicked
        //выделение второго чекбокса, отмена выделения других
        btnList1.setSelected(false);
        btnList2.setSelected(true);
        btnList3.setSelected(false);
    }//GEN-LAST:event_btnList2MouseClicked

    private void btnList3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnList3MouseClicked
        //выделение третьего чекбокса, отмена выделения других
        btnList1.setSelected(false);
        btnList2.setSelected(false);
        btnList3.setSelected(true);
    }//GEN-LAST:event_btnList3MouseClicked

    private void btnCreateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCreateMouseClicked
        String str = text.getText();
        try {
            //создание входного потока
            ObjectInputStream ois = new ObjectInputStream(new FileInputStream(Files.FILE_MODEL));
            //чтение моделей из файла
            DefaultListModel<String> model1 = (DefaultListModel<String>) ois.readObject();
            DefaultListModel<String> model2 = (DefaultListModel<String>) ois.readObject();
            DefaultListModel<String> model3 = (DefaultListModel<String>) ois.readObject();
            //добавление элемента выбранной модели
            if (btnList1.isSelected()) {
                model1.addElement(str);
            }
            if (btnList2.isSelected()) {
                model2.addElement(str);
            }
            if (btnList3.isSelected()) {
                model3.addElement(str);
            }
            //закрытие входного потока
            ois.close();
            //создание выходного потока
            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(Files.FILE_MODEL));
            //запись измененных моделей
            oos.writeObject(model1);
            oos.writeObject(model2);
            oos.writeObject(model3);
            //закрытие выходного потока
            oos.close();

        } catch (FileNotFoundException ex) {
            //если файл не найден            
            ObjectOutputStream oos = null;
            try {
                //создание пустых моделей
                DefaultListModel<String> model1 = new DefaultListModel<>();
                DefaultListModel<String> model2 = new DefaultListModel<>();
                DefaultListModel<String> model3 = new DefaultListModel<>();
                //добавление элемента выбранной медели
                if (btnList1.isSelected()) {
                    model1.addElement(str);
                }
                if (btnList2.isSelected()) {
                    model2.addElement(str);
                }
                if (btnList3.isSelected()) {
                    model3.addElement(str);
                }
                //создание выходного потока
                oos = new ObjectOutputStream(new FileOutputStream(Files.FILE_MODEL));
                //запись моделей в файл
                oos.writeObject(model1);
                oos.writeObject(model2);
                oos.writeObject(model3);
                //закрытие выходного потока
                oos.close();
            } catch (FileNotFoundException ex1) {
                Logger.getLogger(Create.class.getName()).log(Level.SEVERE, null, ex1);
            } catch (IOException ex1) {
                Logger.getLogger(Create.class.getName()).log(Level.SEVERE, null, ex1);
            } finally {
                try {
                    oos.close();
                } catch (IOException ex1) {
                    Logger.getLogger(Create.class.getName()).log(Level.SEVERE, null, ex1);
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(Create.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Create.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            //закрытие интерфейса
            this.dispose();
            //создание окна со списками
            new GUI().setVisible(true);
        }
    }//GEN-LAST:event_btnCreateMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JRadioButton btnList1;
    private javax.swing.JRadioButton btnList2;
    private javax.swing.JRadioButton btnList3;
    private javax.swing.JTextField text;
    // End of variables declaration//GEN-END:variables
}
